@Author : Ravindra sai Konna
konna.p.sai@happiestminds.com


Developing Lambda Locally 
SAM CLI (AWS introduced)
Docker



***** requirements 

Install Sam cli 

Windows 
https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install-windows.html

Linux
https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install-linux.html


Install Docker 

Windows 
https://docs.docker.com/docker-for-windows/install/ 

Linux
https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-16-04



1. SAM INIT( Intiate the setup)

   # follow the steps in console
   # default name is sam-app
   # cd sam-app/


2. SAM BUILD (Build the Code and generate the artifacts)
   
   # sam uses local machine to execute the function 
   # make sure command should be fired in the directory where the template.yml is available
   # template.yml contains the memory, runtime, handler, path properties, CodeUri (path of the src)
   # by default hello-world folder contains the src files
   # we can change the resources based upon the requirement that you have (ex: python 3.7 -> python 3.8)
  
  
3. SAM local start-api (fire up this command to start local restapi)

   # simply a container will come into the picture to act as a RESTAPI (end point) ex: localhost:3000/hello
   # for the first time it will take (10-15 min) time to execute because of installing docker image based on opted stack
   # docker image called lambci/lambda (docker images) get pulled 
   # by default api mapped to 0.0.0.0:3000
   
   
   
                              # LocalMachine --> DockerImage Acts API Gateway
   
   
  
  
4. SAM deploy -guided  

  # when developers done with development then push into the cloud by firing up the above command
  # follow the on screen steps to achieve the setup
